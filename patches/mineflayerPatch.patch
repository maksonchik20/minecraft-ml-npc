diff --git a/node_modules/mineflayer/lib/plugins/physics.js b/node_modules/mineflayer/lib/plugins/physics.js
index 0000000..a24c811 100644
--- a/node_modules/mineflayer/lib/plugins/physics.js
+++ b/node_modules/mineflayer/lib/plugins/physics.js
@@ -0,304 +3,357 @@
  bot.look = async (yaw, pitch, force) => {
    if (!lookingTask.done) {
      lookingTask.finish() // finish the previous one
    }
    lookingTask = createTask()
+
+    while(yaw > 180.0)
+      yaw -= 360.0;
+    while(yaw < -180.0)
+      yaw += 360.0;
+    pitch = Math.max(-90.0, Math.min(90.0, pitch));
+
+    if(!isFinite(yaw) || isNaN(yaw)) {
+      yaw = 0.0
+    }
+
+    if(!isFinite(pitch) || isNaN(pitch)) {
+      pitch = 0.0
+    }
+
    // this is done to bypass certain anticheat checks that detect the player's sensitivity
    // by calculating the gcd of how much they move the mouse each tick
    const sensitivity = conv.fromNotchianPitch(0.15) // this is equal to 100% sensitivity in vanilla
    const yawChange = Math.round((yaw - bot.entity.yaw) / sensitivity) * sensitivity
    const pitchChange = Math.round((pitch - bot.entity.pitch) / sensitivity) * sensitivity
+
+    if (yawChange === 0 && pitchChange === 0) {
+      return
+    }
+
    bot.entity.yaw += yawChange
+    while(bot.entity.yaw > 180.0)
+      bot.entity.yaw -= 360.0;
+    while(bot.entity.yaw < -180.0)
+      bot.entity.yaw += 360.0;
    bot.entity.pitch += pitchChange
+    bot.entity.pitch = Math.max(-90.0, Math.min(90.0, bot.entity.pitch));
+
+    if(!isFinite(bot.entity.yaw) || isNaN(bot.entity.yaw)) {
+      bot.entity.yaw = 0.0
+    }
+
+    if(!isFinite(bot.entity.pitch) || isNaN(bot.entity.pitch)) {
+      bot.entity.pitch = 0.0
+    }
+
    if (force) {
      lastSentYaw = yaw
      lastSentPitch = pitch
      return
    }

    await lookingTask.promise
  }
